/*
표준 출력
go 언어 서식지정자
Printf(서식 문자열, 인수1, 인수2, . . . )

%v 데이터 타입에 맞춰서 기본 형태로 출력합니다

%T 데이터 타입 출력합니다

%t 불리언을 true/false로 출력합니다

%d 10진수 정수값으로 출력합니다(정수 타입만 가능)

%b 2진수로 출력합니다

%c 유니코드 문자를 출력합니다(정수 타입만 가능)

%o 8진수로 출력합니다

%O 앞에 8진수임을 표시하는 Oo를 붙여서 8진수로 값을 출력합니다

%x 16진수로 값을 출력합니다. 10 이상값을 a-f소문자로 표시합니다

%X 16진수로 값을 출력합니다. 10 이상값을 A-F대문자로 표시합니다

%e %E 지수 형태로 실수값을 출력합니다(실수 타입만 가능)
	예 -1.234456E+78
%f %F 지수 형태가가 아닌 실수값 그대로 출력합니다 (실수 타입만 가능)
	예 123.456
%g %G 값이 큰 실수값은 지수 형태(%e)로 출력하고, 작은 실수값은 실수값 그대로(%f) 출력합니다

%s 문자열을 출력합니다

%q 특수 문자 기능을 동작하지 않고 문자열 그대로 출력합니다.
	fmt.Printf("%q", "hello\tworld\n")
	위와 같이 하면 \t 와 \n 특수 문자가 동작하지 않고 hello\tworld\n이 출력됩니다.
%p 메모리 주소값을 출력합니다.
*/

package main

import "fmt"

func main() {
	a := 42
	var b int32 = 42
	var c float64 = 42.123
	var d bool = true
	fmt.Printf("v is of type %T %T %T %T\n", a, b, c, d)
}
